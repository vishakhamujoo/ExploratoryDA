2+2
7:3 -1
7:3
stack.loss
stack.loss/7
help stack.loss
?stack.loss
help("stack.loss")
args(mean)
args(sort)
args(rev)
mean(stack.loss,trim=.20)
sort(stack.loss)
rev(sort(stack.loss))
?mean
objects()
search()
find("mean")
?class
?mode
exit
q
getwd()
debug(ls)
ls
ls
1
set.seed(1)
rpois(5,2)
library(swirl)
swirl()
swirl()
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
swirl()
mydf<-read.csv("path2csv",stringsAsFactors = FALSE)
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head()
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?manip
select(cran, ip_id, package, country)
5:20
(cran, r_arch:country)
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size)
)
select(cran, -time)
select(cran, -(X:size))
filter(cran, package == "swirl")
ilter(cran,
| r_version == "3.1.1", country == "US")
ilter(cran, r_version == "3.1.1", country == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparision
?Comparison
filter(cran, r_version <= "3.1.1", country == "India")
filter(cran, r_version <= "3.1.1", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran,  !is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country (ascending), r_version(descending),  ip_id (ascending))
arrange(cran2, country, desc(r_version),  ip_id )
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20,size_gb= size_mb / 2^10)
cran3
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package, avg_bytes = mean(size))
summarize(by_package,  mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts<-filter(pack_sum,  n()>679)
top_counts<-filter(pack_sum,  count>679)
top_counts
head(top_counts, 20)
arrange(top_counts,  desc(count) )
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filter(pack_sum$unique,  count>465)
top_unique<-filter(pack_sum,  count>465)
filter(pack_sum, unique > 465)
top_unique<-filter(pack_sum,  unique>465)
top_unique
arrange(top_unique,  desc(unique) )
submit()
submit()
submit()
swirl()
swirl()
submit()
submit()
submit()
submit()
submit()
submit()
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res<-gather(students2,sex_class,count,-grade)
res
?seperate
?seperate()
?separate
seperate(res,col=sex_class,into=c(sex",class"))
seperate(data=res,col=sex_class,into=c(sex",class"))
separate(data=res,col=sex_class,into=c(sex",class"))
separate(data=res,col=sex_class,into=c(sex","class"))
separate(data=res,col=sex_class,into=c("sex","class"))
submit()
students3
submit()
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
submit()
submit()
?mutate
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
passed<-mutate(passed, status="passed")
failed<-mutate(failed, status="failed")
?rbind_list
rbind_list(passed,failed)
sat
?gather
submit()
View(result1)
submit()
?select
submit()
submit()
?gather
submit()
submit()
submit()
submit()
?group_by
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package
| = lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
year(this_moment)
hour(this_moment)
my_date<-this_day <- today()
my_date
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
mdy(25081985)
dmy(25081985)
ymd("192012")
ymd("19-20-12")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd_hms(dt2)
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment<-update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
now(tzone="America/New_York)")
nyc<-now(tzone="America/New_York)")
now("America/New_York")
nyc<-now("America/New_York")
nyc
depart<-nyc + days(2)
depart
depart<-update(depart, hours = 17, minutes = 34)
depart
arrive<-nyc + hours(15)+min(50)
arrive<-nyc + hours(15)+minutes(50)
arrive<-depart + hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,tzone="Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz="Singapore")
last_time
?new_interval()
?new_interval
how-long(last_time,arrive)
how-long<-(last_time,arrive)
how-long<-new_interval(last_time,arrive)
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
exit
exit()
0
setwd("~/Rworkingdir/exploratory")
getwd()
install.packages("graphicsQC")
library(graphicsQC)
?graphicsQC
x<-rnorm(100)
hist(x)
temp<-tempfile()
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE)
?read
getdata <- function(fpath){
sql <- "select * from file where Date BETWEEN '2007-02-01'AND '2007-02-02'"
data <- read.csv.sql(file=fpath, sql = sql ,sep=";", header=TRUE, eol="\n")
data
}
fpath <- "data/household_power_consumption.txt"
data <- getdata(fpath)
install.packages("sqlutils")
getdata <- function(fpath){
sql <- "select * from file where Date BETWEEN '2007-02-01'AND '2007-02-02'"
data <- read.csv.sql(file=fpath, sql = sql ,sep=";", header=TRUE, eol="\n")
data
}
fpath <- "data/household_power_consumption.txt"
data <- getdata(fpath)
library(sqlutils)
?sqlutils-package
getdata <- function(fpath){
sql <- "select * from file where Date BETWEEN '2007-02-01'AND '2007-02-02'"
data <- read.csv.sql(file=fpath, sql = sql ,sep=";", header=TRUE, eol="\n")
data
}
fpath <- "data/household_power_consumption.txt"
data <- getdata(fpath)
install.packages("sqldf")
library(sqldf)
getdata <- function(fpath){
sql <- "select * from file where Date BETWEEN '2007-02-01'AND '2007-02-02'"
data <- read.csv.sql(file=fpath, sql = sql ,sep=";", header=TRUE, eol="\n")
data
}
fpath <- "data/household_power_consumption.txt"
data <- getdata(fpath)
getdata <- function(fpath){
sql <- "select * from file where Date BETWEEN '2007-02-01'AND '2007-02-02'"
data <- read.csv.sql(file=fpath, sql = sql ,sep=";", header=TRUE, eol="\n")
data
}
fpath <- "household_power_consumption.txt"
data <- getdata(fpath)
data
getdata <- function(fpath){
sql <- "select * from file where Date BETWEEN '2007-02-01'AND '2007-02-02'"
data <- read.csv.sql(file=fpath, sql = sql ,sep=";", header=TRUE, eol="\n")
data
}
fpath <- "household_power_consumption.txt"
data <- getdata(fpath)
getdata <- function(fpath){
sql <- "select * from file where Date BETWEEN '02-01-2007'AND '02-02-2007'"
data <- read.csv.sql(file=fpath, sql = sql ,sep=";", header=TRUE, eol="\n")
data
}
fpath <- "household_power_consumption.txt"
data <- getdata(fpath)
getdata <- function(fpath){
sql <- "select * from file where Date BETWEEN '02-01-2007'AND '02-02-2007'"
data <- read.csv.sql(file=fpath, sql = sql ,sep=";", header=TRUE, eol="\n")
data
}
fpath <- "household_power_consumption.txt"
data <- getdata(fpath)
data <- read.table("household_power_consumption.txt", sep=";", header=TRUE)
twodays<-subset(data, Data$Date>2011-01-01|data$Date<2011-07-01)
twodays<-subset(data, data$Date>2011-01-01|data$Date<2011-07-01)
twodays<-subset(data, data$Date>=02-01-2007|data$Date<=02-02-2007)
class(data$Date)
class(data$Time)
data$Date <- as.Date(data$Date, format="%d/%m/%Y")
class(data$Date)
data_subset <- data[data$Date=="2007-02-01" | data$Date=="2007-02-02"]
submit plot1.r
submit Plot1.R
?submit
Plot1.R
source('Plot1.R')
source("Plot1.R")
?fread
install.packages("data.table")
library(data.table)
source("Plot1.R")
source("Plot2.R")
source("Plot2.R")
source("Plot2.R")
source("Plot3.R")
source("Plot4.R")
setwd("~/Rworkingdir/exploratory/project1")
git init
git
